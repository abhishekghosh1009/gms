events {
  worker_connections  4096;  ## Default: 1024
}

http{
  server {
    listen        80;
    # server_name   dev.gms.io;
    server_name  localhost
    access_log   /var/log/nginx/gms_dev_io.access.log combined;
    # Redirect all HTTP traffic to HTTPS
    # return 301 https://$host$request_uri;

    location / {
      proxy_pass              http://gms:8080;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto https;
      proxy_set_header        Host $http_host;
    }
  }
  server {
    listen        443 ssl;
    server_name   dev.gms.io;
    access_log   /var/log/nginx/gms_dev_io.access.log  combined_ssl;

    ssl on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate      /etc/ssl/certs/server.crt;
    ssl_certificate_key  /etc/ssl/private/server.key;
    ssl_client_certificate  /etc/ssl/certs/ca-certificates.crt;
    ssl_verify_client optional;
    ssl_verify_depth 5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;


    location / {
      proxy_pass              http://gms:8080;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto https;
      proxy_set_header        Host $http_host;

      # TLS stuff
      proxy_set_header        X-SSL-Client-Cert $ssl_client_cert;
      proxy_set_header        X-SSL-Client-I-Dn $ssl_client_i_dn;
      proxy_set_header        X-SSL-Client-S-Dn $ssl_client_s_dn;
      proxy_set_header        X-SSL-Client-Serial $ssl_client_serial;
      proxy_set_header        X-SSL-Client-V-Start $ssl_client_v_start;
      proxy_set_header        X-SSL-Client-V-End   $ssl_client_v_end;
      proxy_set_header        X-SSL-Client-Verify  $ssl_client_verify;
      proxy_set_header        X-SSL-Protocol $ssl_protocol;
      proxy_set_header        X-SSL-Server-Name $ssl_server_name;
      }
  }

}